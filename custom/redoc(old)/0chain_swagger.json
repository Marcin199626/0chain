{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "# 0Chain Blockchain\n0Chain Blockchain is\n1. World’s ***fastest*** blockchain (publicly demonstrated with 10 world-wide data centers).\n2. World’s fastest *enterprise-grade* distributed storage that is secure against attacks.\n3. World’s first token with an intrinsic value of data, or a ‘tethered’ data value, or an ‘enterprise’ value.\n4. World’s first token economics that mirrors or betters the Fed interest rate mechanics to control inflation.\n5. World’s first zero-cost or asset-based model for services (transactions, storage).\n\n_______________",
    "title": "0Chain Blockchain API.",
    "termsOfService": "What should be our ToS?",
    "contact": {
      "name": "Support",
      "url": "https://0chain.net",
      "email": "support@0chain.net"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/v1",
  "paths": {
    "/orders": {
      "get": {
        "description": "List of orders made by current user",
        "tags": [
          "orders"
        ],
        "summary": "Handler returning list of orders.",
        "operationId": "listOrder",
        "parameters": [
          {
            "maximum": 12,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "x-go-name": "Limit",
            "description": "List order limitations.",
            "name": "limit",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "order",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/order"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Handler to create an order.",
        "operationId": "createOrder",
        "parameters": [
          {
            "x-go-name": "Order",
            "description": "The order to submit.",
            "name": "order",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/order"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/orderResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          }
        }
      }
    },
    "/users{nickname}": {
      "get": {
        "description": "Information about user",
        "tags": [
          "users"
        ],
        "summary": "Handler returning information about user.",
        "operationId": "getUserByNickname",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Nickname",
            "description": "The nickname of user",
            "name": "nickname",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/v1/block/get": {
      "get": {
        "tags": [
          "blocks",
          "blockParams"
        ],
        "operationId": "confirmTransaction",
        "responses": {
          "200": {
            "$ref": "#/responses/BlockHeader"
          }
        }
      }
    },
    "/v1/transaction/get/confirmation": {
      "get": {
        "tags": [
          "transactions",
          "confirmationParams"
        ],
        "operationId": "confirmTransaction",
        "responses": {
          "200": {
            "$ref": "#/responses/BlockHeader"
          }
        }
      }
    },
    "/v1/transaction/put": {
      "put": {
        "tags": [
          "transactions"
        ],
        "operationId": "putTransaction",
        "parameters": [
          {
            "x-go-name": "Transaction",
            "description": "The transaction to submit.",
            "name": "transaction",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Transaction"
          }
        }
      }
    }
  },
  "definitions": {
    "Transaction": {
      "description": "Transaction entity that encapsulates the transaction related data and meta data",
      "type": "object",
      "required": [
        "hash",
        "version",
        "client_id",
        "to_client_id",
        "transaction_data",
        "transaction_value",
        "signature",
        "creation_date",
        "transaction_type",
        "transaction_fee"
      ],
      "properties": {
        "chain_id": {
          "description": "ChainID of the blockchain where wallets are active\n\nrequired: true`",
          "type": "string",
          "x-go-name": "ChainID"
        },
        "client_id": {
          "description": "ClientID of the originating wallet",
          "type": "string",
          "x-go-name": "ClientID"
        },
        "creation_date": {
          "description": "Creation Date of the transaction. This will determine the age of the transaction.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreationDate"
        },
        "hash": {
          "description": "Hash of the transaction",
          "type": "string",
          "x-go-name": "Hash"
        },
        "public_key": {
          "description": "PublicKey of the originating wallet",
          "type": "string",
          "x-go-name": "PublicKey"
        },
        "signature": {
          "description": "Signature of the orginating wallet",
          "type": "string",
          "x-go-name": "Signature"
        },
        "to_client_id": {
          "description": "ToClientID of the destination wallet",
          "type": "string",
          "x-go-name": "ToClientID"
        },
        "transaction_data": {
          "description": "Serialized Object of one of Send or StoreData or SmartContract object",
          "type": "string",
          "x-go-name": "TransactionData"
        },
        "transaction_fee": {
          "description": "Gas money the originating wallet is willing to pay.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "TransactionFee"
        },
        "transaction_output": {
          "description": "Transaction output present only in the response",
          "type": "string",
          "x-go-name": "TransactionOutput"
        },
        "transaction_type": {
          "description": "Type of transaction. Should be one of:\n0 for Send,\n10 for StoreData,\n1000 for Smartcontract",
          "type": "integer",
          "format": "int64",
          "x-go-name": "TransactionType"
        },
        "transaction_value": {
          "description": "Value of Send Transaction. For all other transaction type set it to 0",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Value"
        },
        "txn_output_hash": {
          "description": "Hash of the TransactionOutput. Present only in the response",
          "type": "string",
          "x-go-name": "OutputHash"
        },
        "version": {
          "description": "Version of the API. Set it to 1.0",
          "type": "string",
          "x-go-name": "Version"
        }
      },
      "x-go-package": "_/Users/jay_at_0chain/Desktop/OnDesktop/0chain-swagger-doc/go-swagger-examples-master"
    },
    "order": {
      "type": "object",
      "title": "An Order for one or more products by a user.",
      "required": [
        "id",
        "user_id"
      ],
      "properties": {
        "id": {
          "description": "ID of the order",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "items": {
          "description": "items for this order\nmininum items: 1",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "product_id",
              "qty"
            ],
            "properties": {
              "product_id": {
                "description": "the id of the product to order",
                "type": "integer",
                "format": "int64",
                "x-go-name": "ProductID"
              },
              "qty": {
                "description": "the quantity of this product to order",
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "x-go-name": "Quantity"
              }
            }
          },
          "x-go-name": "OrderItems"
        },
        "user_id": {
          "description": "the id of the user who placed the order.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "UserID"
        }
      },
      "x-go-name": "Order",
      "x-go-package": "_/Users/jay_at_0chain/Desktop/OnDesktop/0chain-swagger-doc/go-swagger-examples-master"
    },
    "putSCTransactionOperId": {
      "description": "SmartContractTxnData is the serializable object that will be used in TransactionData of Transaction for SmartContract type transaction",
      "type": "object",
      "required": [
        "name",
        "input"
      ],
      "properties": {
        "input": {
          "description": "The one of the serialized smartcontract objects mentioned below",
          "type": "string",
          "x-go-name": "InputArgs"
        },
        "name": {
          "description": "Address of the SmartContract",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-name": "SmartContractTxnData",
      "x-go-package": "_/Users/jay_at_0chain/Desktop/OnDesktop/0chain-swagger-doc/go-swagger-examples-master/smartcontract"
    },
    "user": {
      "type": "object",
      "title": "User available to create an order.",
      "required": [
        "id",
        "nickname"
      ],
      "properties": {
        "id": {
          "description": "ID of user",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "nickname": {
          "description": "nickname of user.",
          "type": "string",
          "x-go-name": "Nickname"
        }
      },
      "x-go-name": "User",
      "x-go-package": "_/Users/jay_at_0chain/Desktop/OnDesktop/0chain-swagger-doc/go-swagger-examples-master"
    }
  },
  "responses": {
    "BlockHeader": {
      "description": "Transaction serializabled blockheader in which the requested transaction is proecessed",
      "headers": {
        "creation_date": {
          "type": "integer",
          "format": "int64",
          "description": "Creation date of the block object."
        },
        "hash": {
          "type": "string",
          "description": "Hash of the Block"
        },
        "merkle_tree_root": {
          "type": "string",
          "description": "MerkleTreeRoot"
        },
        "miner_id": {
          "type": "string",
          "description": "ID of the Miner who generated this block"
        },
        "num_txns": {
          "type": "integer",
          "format": "int64",
          "description": "Number of transactions in this block"
        },
        "receipt_merkle_tree_root": {
          "type": "string"
        },
        "round": {
          "type": "integer",
          "format": "int64",
          "description": "Round in which the block is processed"
        },
        "round_random_seed": {
          "type": "integer",
          "format": "int64",
          "description": "RoundRandomSeed that is used for this block"
        },
        "state_hash": {
          "type": "string",
          "description": "Hash of the state when the block is processed"
        },
        "version": {
          "type": "string",
          "description": "Version of the block object. Currently 1.0"
        }
      }
    },
    "Transaction": {
      "description": "Transaction serializabled transaction response",
      "schema": {
        "$ref": "#/definitions/Transaction"
      }
    },
    "orderResponse": {
      "description": "An OrderResponse response model\n\nThis is used for returning a response with a single order as body",
      "schema": {
        "$ref": "#/definitions/order"
      },
      "headers": {
        "Rate-Limit-Remaining": {
          "type": "string",
          "description": "Get number of rate limted requests remaining"
        }
      }
    },
    "validationError": {
      "description": "A ValidationError is a swagger response to represent error",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "x-go-name": "Code"
          },
          "field": {
            "type": "string",
            "x-go-name": "Field"
          },
          "message": {
            "type": "string",
            "x-go-name": "Message"
          }
        }
      }
    }
  }
}